<system>
  log_level error
  workers 2
</system>

<source>
  @type forward
  port 24224
  bind 0.0.0.0
</source>

<filter log.hdfs>
  @type parser
  key_name log
  reserve_data true
  remove_key_name_field true
  <parse>
    @type regexp
    expression /^(?<log_date>\d{6})\s(?<log_time>\d{6})\s(?<duration>\d+)\s(?<log_level>\w+)\s(?<class>[^:]+):\s(?<message>.*)$/
    types log_date:string, log_time:string, duration:integer, log_level:string, class:string, message:string
  </parse>
</filter>

<filter log.hdfs>
  @type record_transformer
  remove_keys log_date,log_time
</filter>

# E1-E3: Basic block operations
<filter log.hdfs>
  @type parser
  key_name message
  reserve_data true
  remove_key_name_field false
  <parse>
    @type regexp
    expression /(?<event>(Adding an already existing block (?<blk_id>blk_\S+)|Verification succeeded for (?<blk_id>blk_\S+)|Served block (?<blk_id>blk_\S+) to (?<dst_ip>\S+)))/
    types blk_id:string
  </parse>
</filter>

# E4-E6: Block transfers
<filter log.hdfs>
  @type parser
  key_name message
  reserve_data true
  remove_key_name_field false
  <parse>
    @type regexp
    expression /(?<event>(Got exception while serving (?<blk_id>blk_\S+) to (?<dst_ip>\S+)|Receiving block (?<blk_id>blk_\S+) src: \/?(?<src_ip>[^:]+):(?<src_port>\d+) dest: \/?(?<dst_ip>[^:]+):(?<dst_port>\d+)|Received block (?<blk_id>blk_\S+) src: \/?(?<src_ip>[^:]+):(?<src_port>\d+) dest: \/?(?<dst_ip>[^:]+):(?<dst_port>\d+) of size (?<size>\d+)))/
    types src_port:integer, dst_port:integer, size:integer
  </parse>
</filter>

# E7-E11: Block exceptions
<filter log.hdfs>
  @type parser
  key_name message
  reserve_data true
  remove_key_name_field false
  <parse>
    @type regexp
    expression /(?<event>(writeBlock (?<blk_id>blk_\S+) received exception (?<error>.+)|PacketResponder (?<responder_id>\d+) for block (?<blk_id>blk_\S+) Interrupted|Received block (?<blk_id>blk_\S+) of size (?<size>\d+) from \/?(?<src_ip>\S+)|PacketResponder (?<blk_id>blk_\S+) (?<responder_id>\d+) Exception (?<exception>\S+)|PacketResponder (?<responder_id>\d+) for block (?<blk_id>blk_\S+) terminating))/
    types size:integer, responder_id:integer
  </parse>
</filter>

# E12-E18: Network operations
<filter log.hdfs>
  @type parser
  key_name message
  reserve_data true
  remove_key_name_field false
  <parse>
    @type regexp
    expression /(?<event>(\/?(?<src_ip>\S+):(?<src_port>\d+):Exception writing block (?<blk_id>blk_\S+) to mirror (?<dst_ip>\S+):(?<dst_port>\d+)|Exception in (?<event_type>\w+) for block (?<blk_id>blk_\S+) (?<error_type>[\w\.]+): (?<error_message>.+)|\/?(?<src_ip>\d+\.\d+\.\d+\.\d+):(?<src_port>\d+):Failed to transfer (?<blk_id>blk_\S+) to (?<dst_ip>\d+\.\d+\.\d+\.\d+):(?<dst_port>\d+) got (?<error_type>[\w\.]+): (?<error_message>.+)|\/?(?<src_ip>\d+\.\d+\.\d+\.\d+):(?<src_port>\d+) Starting thread to transfer block (?<blk_id>blk_\S+) to (?<dst_ips>.+)|Changing block file offset of block (?<blk_id>blk_\S+) from (?<old_offset>\d+) to (?<new_offset>\d+) meta file offset to (?<meta_offset>\d+)|(\S+):Transmitted block (?<blk_id>blk_\S+) to (?<dst_ip>\S+)))/
    types src_port:integer, dst_port:integer, old_offset:integer, new_offset:integer, meta_offset:integer
  </parse>
</filter>

# E19-E22: Block management
<filter log.hdfs>
  @type parser
  key_name message
  reserve_data true
  remove_key_name_field false
  <parse>
    @type regexp
    expression /(?<event>(Reopen Block (?<blk_id>blk_\S+)|Unexpected error trying to delete block (?<blk_id>blk_\S+)\. (?<error_message>.+)|Deleting block (?<blk_id>blk_\S+) file (?<file_path>\/\S+)|BLOCK\* NameSystem\.allocateBlock: (?<file_path>\/[\w\/\.\-]+) (?<blk_id>blk_\S+)))/
  </parse>
</filter>

# E23-E29: System operations
<filter log.hdfs>
  @type parser
  key_name message
  reserve_data true
  remove_key_name_field false
  <parse>
    @type regexp
    expression /(?<event>(BLOCK\* NameSystem.*delete: (?<blk_id>blk_\S+) is added to invalidSet of (?<node>\S+)|BLOCK\* ask \/?(?<src_ip>\S+):(?<src_port>\d+) to replicate (?<blk_id>blk_\S+) to (?<dst_ips>.+)|BLOCK\* NameSystem.*addStoredBlock: blockMap updated: (?<node_ip>\S+):(?<node_port>\d+) is added to (?<blk_id>blk_\S+) size (?<size>\d+)|BLOCK\* NameSystem.*addStoredBlock: Redundant addStoredBlock request received for (?<blk_id>blk_\S+) on (?<node>\S+) size (?<size>\d+)|BLOCK\* NameSystem.*addStoredBlock: addStoredBlock request received for (?<blk_id>blk_\S+) on (?<node>\S+) size (?<size>\d+) But it does not belong to any file|PendingReplicationMonitor timed out block (?<blk_id>blk_\S+)))/
    types src_port:integer, node_port:integer, size:integer
  </parse>
</filter>

<filter log.hdfs>
  @type record_transformer
  enable_ruby true
  <record>
    EventId ${(e=record["event"].to_s.downcase; e.include?("adding an already existing block")?"E1":e.include?("verification succeeded")?"E2":e.include?("served block")?"E3":e.include?("got exception while serving")?"E4":(e.include?("receiving block")&&record["src_ip"])?"E5":(e.include?("received block")&&record["src_ip"]&&record["dst_ip"])?"E6":(e.include?("writeblock")&&record["error"])?"E7":e.include?("interrupted")?"E8":(e.include?("of size")&&record["src_ip"])?"E9":e.include?("exception writing block")?"E12":e.include?("receiving empty packet")?"E13":e.include?("exception in receiveblock")?"E14":e.include?("changing block file offset")?"E15":e.include?("transmitted block")?"E16":e.include?("failed to transfer")?"E17":e.include?("starting thread to transfer")?"E18":e.include?("reopen block")?"E19":e.include?("unexpected error trying to delete")?"E20":(e.include?("deleting block")&&record["file_path"])?"E21":e.include?("allocateblock")?"E22":e.include?("invalidset")?"E23":e.include?("removing block")?"E24":(e.include?("ask")&&e.include?("replicate"))?"E25":e.include?("blockmap updated")?"E26":e.include?("redundant addstoredblock")?"E27":e.include?("does not belong to any file")?"E28":e.include?("pendingreplicationmonitor")?"E29":e.include?("exception")?"E10":e.include?("terminating")?"E11":"unknown")}
  </record>
</filter>

<match log.hdfs>
  @type copy
  <store>
    @type influxdb2
    url my-url
    org my-org
    token my-token
    bucket logs
    <buffer>
      flush_interval 5s
      chunk_limit_size 512k
      total_limit_size 1m
      retry_max_interval 30
      retry_forever false
    </buffer>
  </store>
  <store>
    @type http
    endpoint http://host.docker.internal:8001/receive-logs/
    http_method post
    <format>
      @type json
    </format>
    <buffer>
      flush_interval 5s
      chunk_limit_size 512k
      total_limit_size 1m
      retry_max_interval 30
      retry_forever false
    </buffer>
    retry_timeout 1h
    error_response_as_is false
  </store>
  <store>
    @type stdout
  </store>
</match>